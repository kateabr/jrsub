name: Build

on:
  workflow_dispatch:
  push:

env:
  REMOTE: handystuff.net

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - uses: snok/install-poetry@v1

      - run: poetry install
      - run: poetry run python -m unittest discover

  black:
    runs-on: ubuntu-latest
    name: Check

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - uses: snok/install-poetry@v1

      - run: poetry install
      - run: poetry run black . --check

#      - uses: redhat-actions/podman-login@v1
#        if: github.ref_name == 'master'
#        with:
#          registry: ghcr.io/${{ github.actor }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - run: >
#          podman build
#          --file demo/flask.Dockerfile
#          --tag ghcr.io/${{ github.repository }}:latest
#          --tag ghcr.io/${{ github.repository }}:${{ github.sha }}
#          demo
#        if: github.ref_name == 'master'
#      - run: |
#          podman push ghcr.io/${{ github.repository }}:latest
#          podman push ghcr.io/${{ github.repository }}:${{ github.sha }}
#        if: github.ref_name == 'master'
#
#      - uses: actions/delete-package-versions@v3
#        if: github.ref_name == 'master'
#        with:
#          package-name: ${{ github.event.repository.name }}
#          min-versions-to-keep: 3

  publish:
    name: Publish
    runs-on: ubuntu-latest
    if: startsWith(github.event.ref, 'refs/tags/v')
    needs: [ test ]

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - run: |
          pip install poetry
          poetry install

      - run: poetry publish --username "${{ secrets.PYPI_USER }}" --password "${{ secrets.PYPI_PASS }}" --build

#  deploy:
#    runs-on: ubuntu-latest
#    name: Deploy
#    needs: [ build ]
#    if: github.ref_name == 'master'
#
#    steps:
#      - name: Configure SSH
#        run: |
#          mkdir ~/.ssh
#          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/deploy_key
#          echo "${{ secrets.DEPLOY_SSH_CONFIG }}" > ~/.ssh/config
#          echo "${{ secrets.DEPLOY_SSH_HOSTS }}" > ~/.ssh/known_hosts
#          chmod 700 ~/.ssh && chmod 600 ~/.ssh/deploy_key
#
#      - run: |
#          ssh $REMOTE "docker pull ghcr.io/${{ github.repository }}:latest"
#          ssh $REMOTE "docker restart jrsub"
